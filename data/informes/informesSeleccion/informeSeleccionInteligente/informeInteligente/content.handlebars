<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Informe Inteligente - {{datosPersonales.nombreCompleto}}</title>
    <style>{{{asset "inteligente-styles.css"}}}</style>
</head>
<body class="report {{#if __layout.isLandscape}}landscape{{/if}}" data-breadcrumb="Informe de Selección">

<!-- MÓDULO 0: PORTADA INTRODUCTORIA -->
<section class="module cover-page" data-breadcrumb="Portada">
    <!-- HEADER PRINCIPAL - PORTADA INTRODUCTORIA -->
    <header class="main-header" data-breadcrumb="Portada Introductoria">
        <div class="header-grid">
            <div class="brand-section">
                <img class="logo" src="{{asset '/assets/logos/001LogotipoGrupompleo.png' 'dataURI'}}"
                     alt="Grupo Empleo"/>
                <div class="brand-text">
                    <h1 class="brand-name">GRUPOMPLEO</h1>
                    <p class="brand-tagline">Recursos Humanos · Sector Industrial</p>
                </div>
            </div>
            <div class="report-meta">
                <span class="report-type">{{tipoInforme}}</span>
                <span class="report-date">{{formatDate fechaEmision}}</span>
                <span class="report-id">#{{idInforme}}</span>
            </div>
        </div>
    </header>

    <!-- BRANDING Y GRÁFICOS INDUSTRIALES -->
    <!-- 
    <div class="cover-branding">
      <div class="brand">GRUPOMPLEO</div>
      <div class="cover__subtitle">Transparencia • Legalidad • Cercanía • Industria</div>
    </div> -->

    <div class="cover-image-container">
        <img class="grafico" src="{{asset '/assets/graphics/GeoColor.png' 'dataURI'}}" alt="Grupo Empleo"/>
    </div>

    <!-- DATOS ADICIONALES DEL INFORME -->
    <div class="cover-metadata">
        <div class="metadata-grid">
            <div class="metadata-item">
                <span class="metadata-label">ID Publicación</span>
                <span class="metadata-value">{{idInformeCvPublicacion}}</span>
            </div>
            <div class="metadata-item">
                <span class="metadata-label">ID Pedido</span>
                <span class="metadata-value">{{idPedidoMaster}}</span>
            </div>
            <div class="metadata-item">
                <span class="metadata-label">Fecha Publicación</span>
                <span class="metadata-value">{{formatDate fechaPublicacion}}</span>
            </div>
            <div class="metadata-item">
                <span class="metadata-label">Estado</span>
                <span class="metadata-value">{{#if publicado}}Publicado{{else}}En proceso{{/if}}</span>
            </div>
            <div class="metadata-item">
                <span class="metadata-label">Tipo Informe</span>
                <span class="metadata-value">{{idTipoInforme}}</span>
            </div>
            <div class="metadata-item">
                <span class="metadata-label">Usuario Creador</span>
                <span class="metadata-value">{{idUsuarioCreador}}</span>
            </div>
        </div>
    </div>


</section>

<!-- ITERACIÓN DE MÓDULOS DINÁMICOS -->
{{#each modulos}}
    <section class="module module-{{@index}}" data-breadcrumb="{{this.titulo}}">

        {{!-- MÓDULO 1: Presentación - Incluye datos básicos del candidato y datos destacados --}}
        {{#ifEquals @index 0}}
            <!-- INFORMACIÓN DEL CANDIDATO - DATOS BÁSICOS -->
            <section class="candidate-header" data-breadcrumb="Datos del Candidato">
                <div class="candidate-grid">
                    <div class="candidate-photo-wrapper">
                        {{#if ../datosPersonales.foto}}
                            <img
                                    class="candidate-photo"
                                    src="{{asset '/assets/profiles/AA.jpg' 'dataURI'}}"
                                    alt="Foto"
                            />
                        {{/if}}
                    </div>
                    <div class="candidate-info">
                        <h2 class="candidate-name">{{../datosPersonales.nombreCompleto}}</h2>
                        <div class="info-grid">
                            <div class="info-item">
                                <span class="info-label">Edad</span>
                                <span class="info-value">{{../datosPersonales.edad}} años</span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Ubicación</span>
                                <span class="info-value">{{../datosPersonales.municipio}}
                                    , {{../datosPersonales.pais}}</span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Email</span>
                                <span class="info-value">{{../datosPersonales.email}}</span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Teléfono</span>
                                <span class="info-value">{{../datosPersonales.telefonoMovil}}</span>
                            </div>
                        </div>
                    </div>
                    {{#if ../informe.puntuacion}}
                        <div class="candidate-score">
                            <div class="score-circle">
                                <span class="score-value">{{../informe.puntuacion}}</span>
                                <span class="score-max">/10</span>
                            </div>
                            <span class="score-label">Puntuación Global</span>
                        </div>
                    {{/if}}
                </div>
            </section>
        {{/ifEquals}}

        {{!-- HEADER DEL MÓDULO --}}
        <header class="module-header">
            <h2 class="module-title">{{this.titulo}}</h2>
            {{#if this.subtitulo}}
                <p class="module-subtitle">{{this.subtitulo}}</p>
            {{/if}}
        </header>

        <div class="module-content">
            {{#each this.secciones}}
                <div class="section" data-breadcrumb="{{../titulo}} › {{this.nombre}}">
                    <h3 class="section-title">{{this.nombre}}</h3>

                    {{#if this.tipo}}
                    {{!-- TIPO datos-basicos eliminado: ya se muestra en header del candidato --}}

                    {{!-- TIPO: texto-editorial (bloques editoriales con subtítulos) --}}
                        {{#ifEquals this.tipo "texto-editorial"}}
                            <div class="texto-editorial">
                                {{#each this.items}}
                                    <div class="bloque-editorial no-break">
                                        <h4 class="editorial-subtitulo">{{this.subtitulo}}</h4>
                                        <div class="editorial-contenido">
                                            {{#each (splitParagraphs this.contenido)}}
                                                <p class="paragraph">{{this}}</p>
                                            {{/each}}
                                        </div>
                                    </div>
                                {{/each}}
                            </div>
                        {{/ifEquals}}

                        {{!-- TIPO: texto (párrafos simples) --}}
                        {{#ifEquals this.tipo "texto"}}
                            <div class="text-content">
                                {{#each (splitParagraphs this.contenido)}}
                                    <p class="paragraph no-break">{{this}}</p>
                                {{/each}}
                            </div>
                        {{/ifEquals}}

                        {{!-- TIPO: lista (experiencia, formación, referencias, etc.) --}}
                        {{#ifEquals this.tipo "lista"}}
                            <div class="lista-content">
                                {{#each this.items}}
                                    <div class="lista-item no-break"
                                         data-breadcrumb="{{../../titulo}} › {{../nombre}} › Item {{@index}}">

                                        {{!-- Lista de experiencia --}}
                                        {{#if this.puesto}}
                                            <div class="experiencia-item item-with-border">
                                                <h4 class="puesto">{{this.puesto}}</h4>
                                                <div class="empresa-rango">
                                                    <span class="empresa">{{this.empresa}}</span>
                                                    <span class="rango-anos">{{this.rangoAnos}}</span>
                                                </div>
                                                {{#if this.funcion}}
                                                    <p class="funcion">{{this.funcion}}</p>
                                                {{/if}}
                                            </div>
                                        {{/if}}

                                        {{!-- Lista de formación --}}
                                        {{#if this.nombreTitulacion}}
                                            <div class="formacion-item item-with-border">
                                                <h4 class="titulacion">{{this.nombreTitulacion}}</h4>
                                                <div class="centro-ano">
                                                    <span class="centro">{{this.centro}}</span>
                                                    <span class="ano">{{this.ano}}</span>
                                                </div>
                                                <span class="titulado-status">{{this.titulado}}</span>
                                            </div>
                                        {{/if}}

                                        {{!-- Lista de referencias - Buscar por empresa sin campo puesto --}}
                                        {{#if this.contacto}}
                                            <div class="referencia-item item-with-border">
                                                <h4 class="ref-empresa">{{this.empresa}}</h4>
                                                <p class="ref-funcion">{{this.funcion}}</p>
                                                <p class="ref-contacto">{{this.contacto}}</p>
                                            </div>
                                        {{/if}}

                                        {{!-- Lista de idiomas --}}
                                        {{#if this.idioma}}
                                            <div class="idioma-item item-with-border">
                                                <span class="idioma">{{this.idioma}}</span>
                                                <span class="nivel">{{this.nivel}}</span>
                                            </div>
                                        {{/if}}

                                        {{!-- Lista de informática --}}
                                        {{#if this.aplicacion}}
                                            <div class="software-item item-with-border">
                                                <span class="aplicacion">{{this.aplicacion}}</span>
                                                <span class="nivel">{{this.nivel}}</span>
                                            </div>
                                        {{/if}}

                                        {{!-- Lista de acreditaciones --}}
                                        {{#if this.tipo}}
                                            <div class="acreditacion-item item-with-border">
                                                <span class="acred-tipo">{{this.tipo}}</span>
                                                <span class="acred-ano">{{this.ano}}</span>
                                                {{#if this.descripcion}}
                                                    <p class="acred-desc">{{this.descripcion}}</p>
                                                {{/if}}
                                            </div>
                                        {{/if}}

                                        {{!-- Lista de adjuntos --}}
                                        {{#if this.ruta}}
                                            <div class="adjunto-item item-with-border">
                                                <span class="adj-tipo">{{this.tipo}}</span>
                                                <span class="adj-ruta">{{this.ruta}}</span>
                                                <span class="adj-horas">{{this.horas}}</span>
                                            </div>
                                        {{/if}}

                                        {{!-- Fallback para listas genéricas --}}
                                        {{#unless this.puesto}}{{#unless this.nombreTitulacion}}{{#unless
                                                this.empresa}}{{#unless this.idioma}}{{#unless
                                                this.aplicacion}}{{#unless this.tipo}}{{#unless this.ruta}}
                                            <div class="item-generico">
                                                {{#if this.titulo}}<strong>{{this.titulo}}</strong>{{/if}}
                                                {{#if this.descripcion}}
                                                    <span class="item-desc">{{this.descripcion}}</span>{{/if}}
                                                {{#if this.fecha}}
                                                    <span class="item-date">{{formatDate this.fecha}}</span>{{/if}}
                                            </div>
                                        {{/unless}}{{/unless}}{{/unless}}{{/unless}}{{/unless}}{{/unless}}{{/unless}}
                                    </div>
                                {{/each}}
                            </div>
                        {{/ifEquals}}

                        {{!-- TIPO: cards (competencias) --}}
                        {{#ifEquals this.tipo "cards"}}
                            <div class="cards-grid">
                                {{#each this.items}}
                                    <div class="card no-break"
                                         data-breadcrumb="{{../../titulo}} › {{../nombre}} › {{this.competencia}}">
                                        <h4 class="card-title">{{this.competencia}}</h4>
                                        {{#if this.puntuacion}}
                                            <div class="card-score">{{this.puntuacion}}/10</div>
                                        {{/if}}
                                        <p class="card-content">{{this.observaciones}}</p>
                                    </div>
                                {{/each}}
                            </div>
                        {{/ifEquals}}

                        {{!-- TIPO: puntuacion-final (bloque numérico) --}}
                        {{#ifEquals this.tipo "puntuacion-final"}}
                            <div class="puntuacion-final no-break">
                                <div class="score-display">
                                    <span class="score-value">{{this.puntuacion}}</span>
                                    <span class="score-separator">/</span>
                                    <span class="score-max">{{this.maxPuntuacion}}</span>
                                </div>
                                <p class="score-label">Puntuación Global</p>
                            </div>
                        {{/ifEquals}}

                        {{!-- TIPO: tabla (fallback para tablas genéricas) --}}
                        {{#ifEquals this.tipo "tabla"}}
                            <div class="table-wrapper">
                                <table class="data-table">
                                    <thead>
                                    <tr>
                                        {{#each this.columnas}}
                                            <th>{{this}}</th>
                                        {{/each}}
                                    </tr>
                                    </thead>
                                    <tbody>
                                    {{#each this.filas}}
                                        <tr class="no-break">
                                            {{#each this}}
                                                <td>{{this}}</td>
                                            {{/each}}
                                        </tr>
                                    {{/each}}
                                    </tbody>
                                </table>
                            </div>
                        {{/ifEquals}}
                    {{/if}}
                </div>
            {{/each}}
        </div>
    </section>
{{/each}}

<!-- DEBUG: Verificar si los módulos se están creando -->
<div style="background: #f0f0f0; padding: 10px; margin: 10px 0; font-family: monospace; font-size: 10px;">
    <strong>DEBUG - Total módulos:</strong> {{modulos.length}}<br>
    {{#if modulos}}
        <strong>Módulos encontrados:</strong><br>
        {{#each modulos}}
            - {{@index}}: {{this.titulo}} ({{this.secciones.length}} secciones)<br>
        {{/each}}
    {{else}}
        <strong style="color: red;">⚠️ NO HAY MÓDULOS - beforeRender no se ejecutó</strong>
    {{/if}}
</div>


<!-- FOOTER -->
<footer class="page-footer">
    <div class="footer-content">
        <span class="confidential">CONFIDENCIAL - Uso exclusivo del cliente</span>
        <span class="page-info">
        <span class="page-number"></span> / <span class="total-pages"></span>
      </span>
    </div>
</footer>

{{#if __layout.fase2.diagnosticsEnabled}}
<!-- ================================================================================ -->
<!-- 📊 PANEL DE DIAGNÓSTICO FASE 2 - MOTOR DE CÁLCULO AVANZADO -->
<!-- ================================================================================ -->
<section class="diagnostics-panel" style="
    margin-top: 40px; 
    padding: 20px; 
    background: #f8f9fa; 
    border: 1px solid #dee2e6; 
    font-family: monospace; 
    font-size: 11px;
    page-break-before: always;
">
    <h3 style="color: #495057; margin: 0 0 16px 0; font-size: 14px;">
        🚀 Diagnóstico FASE 2 - Motor de Cálculo Avanzado
    </h3>
    
    <!-- Información del beforeRender -->
    <div style="margin-bottom: 16px;">
        <strong>📋 Procesamiento beforeRender:</strong><br>
        • Timestamp: {{__layout.fase2.timestamp}}<br>
        • Estado: {{#if __layout.fase2.enabled}}✅ Habilitado{{else}}❌ Error: {{__layout.fase2.error}}{{/if}}<br>
        • Módulos procesados: {{__layout.moduleCount}}<br>
        • Orientación: {{#if __layout.isLandscape}}Landscape{{else}}Portrait{{/if}}<br>
        • Caracteres totales: {{__layout.totalChars}}<br>
        • Elementos totales: {{__layout.totalItems}}<br>
    </div>
    
    <!-- Información de scripts FASE 2 -->
    <div style="margin-bottom: 16px;">
        <strong>🔧 Scripts FASE 2 (se inicializarán en navegador):</strong><br>
        • PhantomRenderer: Pre-cálculo de medidas<br>
        • CalculationEngine: Motor coordinador<br>
        • MeasurementDatabase: Base de datos de medidas<br>
        • MeasurementCache: Cache inteligente con TTL<br>
        • MeasurementService: Servicio mejorado (FASE 1 + FASE 2)<br>
    </div>
    
    <!-- Placeholder para resultados del navegador -->
    <div id="diagnostics-browser-results" style="margin-bottom: 16px;">
        <strong>⏱️ Resultados del navegador (se llenarán dinámicamente):</strong><br>
        <span id="phantom-status">• PhantomRenderer: Pendiente...</span><br>
        <span id="calculation-status">• CalculationEngine: Pendiente...</span><br>
        <span id="cache-status">• Cache: Pendiente...</span><br>
    </div>
    
    <!-- Debug de módulos -->
    <div style="margin-bottom: 16px;">
        <strong>📦 Módulos detectados:</strong><br>
        {{#each modulos}}
        • Módulo {{@index}}: {{titulo}} ({{moduleType}}) - {{secciones.length}} secciones<br>
        {{/each}}
    </div>
    
    <div style="font-size: 10px; color: #6c757d; margin-top: 12px;">
        Generado por informeSeleccionInteligente FASE 2 - Motor de Cálculo Avanzado
    </div>
</section>
{{/if}}

<!-- ================================================================================ -->
<!-- 🚀 FASE 2 SIMPLIFICADA - MOTOR DE CÁLCULO INTEGRADO -->
<!-- ================================================================================ -->

<script>
// FASE 2 - Versión simplificada integrada
(function() {
    'use strict';
    
    /**
     * MEASUREMENT CACHE SIMPLIFICADO - FASE 2
     */
    class SimpleMeasurementCache {
        constructor() {
            this.cache = new Map();
            this.maxSize = 100;
            this.ttl = 300000; // 5 minutos
            this.stats = { hits: 0, misses: 0 };
        }
        
        set(key, value) {
            if (this.cache.size >= this.maxSize) {
                const firstKey = this.cache.keys().next().value;
                this.cache.delete(firstKey);
            }
            
            this.cache.set(key, {
                value,
                timestamp: Date.now()
            });
        }
        
        get(key) {
            const item = this.cache.get(key);
            if (!item) {
                this.stats.misses++;
                return null;
            }
            
            if (Date.now() - item.timestamp > this.ttl) {
                this.cache.delete(key);
                this.stats.misses++;
                return null;
            }
            
            this.stats.hits++;
            return item.value;
        }
        
        getStats() {
            return { ...this.stats, size: this.cache.size };
        }
    }
    
    /**
     * MEASUREMENT DATABASE SIMPLIFICADO - FASE 2
     */
    class SimpleMeasurementDatabase {
        constructor() {
            this.standards = {
                'h1': { height: 40, confidence: 0.9 },
                'h2': { height: 32, confidence: 0.9 },
                'h3': { height: 24, confidence: 0.9 },
                'paragraph': { height: 20, confidence: 0.8 },
                'module': { height: 60, confidence: 0.7 },
                'section': { height: 40, confidence: 0.8 },
                'competency-card': { height: 50, confidence: 0.9 },
                'experience-item': { height: 80, confidence: 0.8 },
                'generic': { height: 30, confidence: 0.6 }
            };
        }
        
        getStandardMeasurement(elementType) {
            return this.standards[elementType] || this.standards['generic'];
        }
        
        getConfidence(elementType) {
            const standard = this.getStandardMeasurement(elementType);
            return standard ? standard.confidence : 0.5;
        }
    }
    
    /**
     * PHANTOM RENDERER SIMPLIFICADO - FASE 2
     */
    class SimplePhantomRenderer {
        constructor() {
            this.measurements = [];
        }
        
        async measureElements() {
            console.log('🔍 [FASE 2] Iniciando medición simplificada de elementos...');
            
            const elements = document.querySelectorAll('.module, .section, h1, h2, h3, p');
            const measurements = [];
            
            elements.forEach((element, index) => {
                const rect = element.getBoundingClientRect();
                const measurement = {
                    index,
                    element: element.tagName.toLowerCase(),
                    className: element.className,
                    height: rect.height,
                    width: rect.width,
                    text: element.textContent.substring(0, 50),
                    complexity: this.calculateComplexity(element)
                };
                measurements.push(measurement);
            });
            
            this.measurements = measurements;
            console.log(`📏 [FASE 2] Medidos ${measurements.length} elementos`);
            return measurements;
        }
        
        calculateComplexity(element) {
            let complexity = 1;
            complexity += element.children.length * 0.5;
            complexity += Math.min(element.textContent.length / 100, 2);
            return Math.min(complexity, 5);
        }
        
        calculateDistribution() {
            const pageHeight = 1100; // Aproximado A4
            let currentHeight = 0;
            let pageCount = 1;
            let elementsPerPage = [];
            let currentPageElements = [];
            
            this.measurements.forEach((measurement) => {
                if (currentHeight + measurement.height > pageHeight) {
                    elementsPerPage.push(currentPageElements);
                    currentPageElements = [measurement];
                    currentHeight = measurement.height;
                    pageCount++;
                } else {
                    currentPageElements.push(measurement);
                    currentHeight += measurement.height;
                }
            });
            
            if (currentPageElements.length > 0) {
                elementsPerPage.push(currentPageElements);
            }
            
            return { pageCount, elementsPerPage, totalHeight: currentHeight };
        }
    }
    
    // Exponer globalmente
    window.SimpleMeasurementCache = SimpleMeasurementCache;
    window.SimpleMeasurementDatabase = SimpleMeasurementDatabase;
    window.SimplePhantomRenderer = SimplePhantomRenderer;
    
})();

document.addEventListener('DOMContentLoaded', async function() {
    console.log('🚀 [FASE 2] Inicializando sistema simplificado...');
    
    try {
        // Debug: Verificar estado de FASE 2
        console.log('🔍 [FASE 2] Debug __layout:', {{{json __layout}}});
        
        // Forzar habilitación de FASE 2 para testing
        const fase2Enabled = {{#if __layout.fase2.enabled}}true{{else}}false{{/if}};
        const fase2Exists = {{#if __layout.fase2}}true{{else}}false{{/if}};
        
        console.log('🔍 [FASE 2] Estado detallado:', { fase2Exists, fase2Enabled });
        
        // Ejecutar FASE 2 independientemente del estado (para debugging)
        console.log('🚀 [FASE 2] Ejecutando FASE 2 (modo forzado para testing)');
        
        // Actualizar diagnósticos en tiempo real
        const updateDiagnostics = (id, message, success = true) => {
            const element = document.getElementById(id);
            if (element) {
                element.textContent = `• ${message}`;
                element.style.color = success ? '#28a745' : '#dc3545';
            }
        };
        
        // 1. Inicializar componentes simplificados FASE 2
        const cache = new window.SimpleMeasurementCache();
        const database = new window.SimpleMeasurementDatabase();
        const phantomRenderer = new window.SimplePhantomRenderer();
        
        updateDiagnostics('cache-status', 'Cache: ✅ Cache simplificado inicializado');
        console.log('✅ [FASE 2] Cache simplificado inicializado');
        
        // 2. Ejecutar medición y cálculo
        updateDiagnostics('phantom-status', 'PhantomRenderer: ⏳ Midiendo elementos...');
        updateDiagnostics('calculation-status', 'CalculationEngine: ⏳ Calculando distribución...');
        
        try {
            // Medir elementos
            const measurements = await phantomRenderer.measureElements();
            
            // Calcular distribución
            const distribution = phantomRenderer.calculateDistribution();
            
            updateDiagnostics('phantom-status', `PhantomRenderer: ✅ ${measurements.length} elementos medidos`);
            updateDiagnostics('calculation-status', `CalculationEngine: ✅ ${distribution.pageCount} páginas estimadas`);
            
            console.log('✅ [FASE 2] Cálculo completado:', { measurements: measurements.length, pages: distribution.pageCount });
            
            // Mostrar estadísticas
            const cacheStats = cache.getStats();
            console.log('📊 [FASE 2] Estadísticas cache:', cacheStats);
            
        } catch (error) {
            updateDiagnostics('phantom-status', 'PhantomRenderer: ❌ Error en medición', false);
            updateDiagnostics('calculation-status', 'CalculationEngine: ❌ Error en cálculo', false);
            console.error('❌ [FASE 2] Error en cálculo:', error);
        }
        
        // Continuar con la ejecución independientemente del estado
        
    } catch (error) {
        console.error('❌ [FASE 2] Error crítico:', error);
    }
    
    // Señalar que JSReport puede continuar
    setTimeout(() => {
        window.JSREPORT_READY_TO_START = true;
        console.log('🏁 [FASE 2] JSReport ready signal enviado');
    }, 500);
});
</script>
</body>
</html>
